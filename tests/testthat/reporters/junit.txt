<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="Expectations" timestamp="1999:12:31 23:59:59" hostname="nodename" tests="6" skipped="0" failures="4" errors="0" time="0">
    <testcase time="0" classname="Expectations" name="Success"/>
    <testcase time="0" classname="Expectations" name="Failure:1">
      <failure type="failure" message="Failure has been forced">Failure has been forced
</failure>
    </testcase>
    <testcase time="0" classname="Expectations" name="Failure:2a">
      <failure type="failure" message="Failure has been forced">Failure has been forced
</failure>
    </testcase>
    <testcase time="0" classname="Expectations" name="Failure:2b">
      <failure type="failure" message="FALSE isn't true.">FALSE isn't true.
</failure>
    </testcase>
    <testcase time="0" classname="Expectations" name="Failure:loop">
      <failure type="failure" message="`i` not equal to 2.">`i` not equal to 2.
1/1 mismatches
[1] 1 - 2 == -1
</failure>
    </testcase>
    <testcase time="0" classname="Expectations" name="Failure:loop"/>
  </testsuite>
  <testsuite name="Errors" timestamp="1999:12:31 23:59:59" hostname="nodename" tests="2" skipped="0" failures="0" errors="2" time="0">
    <testcase time="0" classname="Errors" name="Error:1">
      <error type="error" message="stop">stop
1: stop("stop") at reporters/tests.R:28</error>
    </testcase>
    <testcase time="0" classname="Errors" name="Error:3">
      <error type="error" message="!">!
1: f() at reporters/tests.R:36
2: g() at reporters/tests.R:32
3: h() at reporters/tests.R:33
4: stop("!") at reporters/tests.R:34</error>
    </testcase>
  </testsuite>
  <testsuite name="Recursion" timestamp="1999:12:31 23:59:59" hostname="nodename" tests="1" skipped="0" failures="0" errors="1" time="0">
    <testcase time="0" classname="Recursion" name="Recursion:1">
      <error type="error" message="evaluation nested too deeply: infinite recursion / options(expressions=)?">evaluation nested too deeply: infinite recursion / options(expressions=)?
1: f() at reporters/tests.R:43
2: f() at reporters/tests.R:42
3: f() at reporters/tests.R:42
4: f() at reporters/tests.R:42
5: f() at reporters/tests.R:42
6: f() at reporters/tests.R:42
7: f() at reporters/tests.R:42
8: f() at reporters/tests.R:42
9: f() at reporters/tests.R:42
10: f() at reporters/tests.R:42
...
170: f() at reporters/tests.R:42
171: f() at reporters/tests.R:42
172: f() at reporters/tests.R:42
173: f() at reporters/tests.R:42
174: f() at reporters/tests.R:42
175: f() at reporters/tests.R:42
176: f() at reporters/tests.R:42
177: f() at reporters/tests.R:42
178: f() at reporters/tests.R:42
179: f() at reporters/tests.R:42</error>
    </testcase>
  </testsuite>
  <testsuite name="Skips" timestamp="1999:12:31 23:59:59" hostname="nodename" tests="3" skipped="3" failures="0" errors="0" time="0">
    <testcase time="0" classname="Skips" name="Skip:1">
      <skipped/>
    </testcase>
    <testcase time="0" classname="Skips" name="Skip:2">
      <skipped/>
    </testcase>
    <testcase time="0" classname="Skips" name="Skip:3">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Warnings" timestamp="1999:12:31 23:59:59" hostname="nodename" tests="3" skipped="0" failures="0" errors="0" time="0">
    <testcase time="0" classname="Warnings" name="Warning:1"/>
    <testcase time="0" classname="Warnings" name="Warning:2"/>
    <testcase time="0" classname="Warnings" name="Warning:2"/>
  </testsuite>
  <testsuite name="Output" timestamp="1999:12:31 23:59:59" hostname="nodename" tests="2" skipped="0" failures="0" errors="0" time="0">
    <testcase time="0" classname="Output" name="Output:1"/>
    <testcase time="0" classname="Output" name="Output:1"/>
  </testsuite>
</testsuites>
